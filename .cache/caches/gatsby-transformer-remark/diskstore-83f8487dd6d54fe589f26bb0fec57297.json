{"expireTime":9007200801288852000,"key":"transformer-remark-markdown-html-7fa75097c619cae3e33cd2a693938d98-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-external-linksgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<p><img src=\"/images/spiesandfakes.jpg\" alt=\"alt text \" title=\"AngularJS Jasmine Spies and Fakes\"></p>\n<h1>One of the great things about angular is itâ€™s testability.</h1>\n<p>Say we have a directive that uses geolocation to display this information to the user if it is available\nand to display a message if it is not available.</p>\n<script src=\"https://gist.github.com/NicholasMurray/a522f0fae5eb654c9a5a.js\"></script>\n<p>So how can we test it using Jasmine and ensure that our test will work regardless if geolocation is\navailable during our testing? We create a spy on the geolocation function and return a fake object instead.</p>\n<script src=\"https://gist.github.com/NicholasMurray/baeb1de0d4fcffe2fbe9.js\"></script>\n<p>Similarly we can return a fake error object to test that our directive acts correctly if geolocation\nis not available.</p>\n<script src=\"https://gist.github.com/NicholasMurray/78f1c7be22715622f4ff.js\"></script>"}