{"expireTime":9007200801288851000,"key":"transformer-remark-markdown-html-ast-8acdbd0edea671b8e3a6f0ef16eed3d9-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-external-linksgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/images/comparingpears.png","alt":"alt text ","title":"Are these pears the same as these pears"},"children":[],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":83,"offset":83}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":83,"offset":83}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"How to test Array equality","position":{"start":{"line":4,"column":3,"offset":87},"end":{"line":4,"column":29,"offset":113}}}],"position":{"start":{"line":4,"column":1,"offset":85},"end":{"line":4,"column":29,"offset":113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When testing arrays with QUnit you may wish to assert that one array is equal to another array.","position":{"start":{"line":6,"column":1,"offset":115},"end":{"line":6,"column":96,"offset":210}}}],"position":{"start":{"line":6,"column":1,"offset":115},"end":{"line":6,"column":96,"offset":210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Qunit provides the equal( actual, expected, message ) method for asserting that actual value is equal to the expected value.","position":{"start":{"line":8,"column":1,"offset":212},"end":{"line":8,"column":125,"offset":336}}}],"position":{"start":{"line":8,"column":1,"offset":212},"end":{"line":8,"column":125,"offset":336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"so what happens in the following test scenario","position":{"start":{"line":10,"column":1,"offset":338},"end":{"line":10,"column":47,"offset":384}}}],"position":{"start":{"line":10,"column":1,"offset":338},"end":{"line":10,"column":47,"offset":384}}},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{},"children":[{"type":"raw","value":"\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 75%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\"\n          >\n            <iframe style=\"\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \" src=\"http://www.unittest.it/embed/QxQx1Bj/1/unittestcode/\"></iframe>\n          </div>\n          "}],"position":{"start":{"line":12,"column":1,"offset":386},"end":{"line":12,"column":138,"offset":523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"this…","position":{"start":{"line":14,"column":1,"offset":525},"end":{"line":14,"column":8,"offset":532}}}],"position":{"start":{"line":14,"column":1,"offset":525},"end":{"line":14,"column":8,"offset":532}}},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{},"children":[{"type":"raw","value":"\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 75%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\"\n          >\n            <iframe style=\"\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \" src=\"http://www.unittest.it/embed/QxQx1Bj/1/unittestresult/\"></iframe>\n          </div>\n          "}],"position":{"start":{"line":16,"column":1,"offset":534},"end":{"line":16,"column":140,"offset":673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It fails horribly onscreen with an error from the sourceStackTrace() output from within QUnit.push","position":{"start":{"line":18,"column":1,"offset":675},"end":{"line":18,"column":99,"offset":773}}}],"position":{"start":{"line":18,"column":1,"offset":675},"end":{"line":18,"column":99,"offset":773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So how can we test arrays with QUnit?","position":{"start":{"line":20,"column":1,"offset":775},"end":{"line":20,"column":38,"offset":812}}}],"position":{"start":{"line":20,"column":1,"offset":775},"end":{"line":20,"column":38,"offset":812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can use the deepEqual() assert method. ","position":{"start":{"line":22,"column":1,"offset":814},"end":{"line":22,"column":43,"offset":856}}}],"position":{"start":{"line":22,"column":1,"offset":814},"end":{"line":22,"column":43,"offset":856}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Qunit provides the deepEqual( actual, expected, message ) method for a deep recursive comparison, working on primitive types, arrays, objects, regular expressions, dates and functions.","position":{"start":{"line":24,"column":1,"offset":858},"end":{"line":24,"column":185,"offset":1042}}}],"position":{"start":{"line":24,"column":1,"offset":858},"end":{"line":24,"column":185,"offset":1042}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So let’s test with deepEqual instead","position":{"start":{"line":26,"column":1,"offset":1044},"end":{"line":26,"column":37,"offset":1080}}}],"position":{"start":{"line":26,"column":1,"offset":1044},"end":{"line":26,"column":37,"offset":1080}}},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{},"children":[{"type":"raw","value":"\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 75%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\"\n          >\n            <iframe style=\"\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \" src=\"http://www.unittest.it/embed/75hM6Wq/1/unittestcode/\"></iframe>\n          </div>\n          "}],"position":{"start":{"line":28,"column":1,"offset":1082},"end":{"line":28,"column":138,"offset":1219}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It passes","position":{"start":{"line":30,"column":1,"offset":1221},"end":{"line":30,"column":10,"offset":1230}}}],"position":{"start":{"line":30,"column":1,"offset":1221},"end":{"line":30,"column":10,"offset":1230}}},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{},"children":[{"type":"raw","value":"\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 87.5%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\"\n          >\n            <iframe style=\"\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \" src=\"http://www.unittest.it/embed/75hM6Wq/1/unittestresult/\"></iframe>\n          </div>\n          "}],"position":{"start":{"line":32,"column":1,"offset":1232},"end":{"line":32,"column":140,"offset":1371}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"due to the implementation of the deepEqual() method there is a call innerEquiv which recursively compares each item within the array","position":{"start":{"line":34,"column":1,"offset":1373},"end":{"line":34,"column":133,"offset":1505}}}],"position":{"start":{"line":34,"column":1,"offset":1373},"end":{"line":34,"column":133,"offset":1505}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":35,"column":1,"offset":1506}}}}