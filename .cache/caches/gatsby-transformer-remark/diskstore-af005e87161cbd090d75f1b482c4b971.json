{"expireTime":9007200801288851000,"key":"transformer-remark-markdown-html-ast-7fa75097c619cae3e33cd2a693938d98-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-external-linksgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/images/spiesandfakes.jpg","alt":"alt text ","title":"AngularJS Jasmine Spies and Fakes"},"children":[],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":76,"offset":76}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":76,"offset":76}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"One of the great things about angular is itâ€™s testability.","position":{"start":{"line":4,"column":3,"offset":80},"end":{"line":4,"column":61,"offset":138}}}],"position":{"start":{"line":4,"column":1,"offset":78},"end":{"line":4,"column":61,"offset":138}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Say we have a directive that uses geolocation to display this information to the user if it is available\nand to display a message if it is not available.","position":{"start":{"line":6,"column":1,"offset":140},"end":{"line":7,"column":49,"offset":293}}}],"position":{"start":{"line":6,"column":1,"offset":140},"end":{"line":7,"column":49,"offset":293}}},{"type":"text","value":"\n"},{"type":"raw","value":"<script src=\"https://gist.github.com/NicholasMurray/a522f0fae5eb654c9a5a.js\"></script>","position":{"start":{"line":9,"column":1,"offset":295},"end":{"line":9,"column":87,"offset":381}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So how can we test it using Jasmine and ensure that our test will work regardless if geolocation is\navailable during our testing? We create a spy on the geolocation function and return a fake object instead.","position":{"start":{"line":11,"column":1,"offset":383},"end":{"line":12,"column":108,"offset":591}}}],"position":{"start":{"line":11,"column":1,"offset":383},"end":{"line":12,"column":108,"offset":591}}},{"type":"text","value":"\n"},{"type":"raw","value":"<script src=\"https://gist.github.com/NicholasMurray/baeb1de0d4fcffe2fbe9.js\"></script>","position":{"start":{"line":14,"column":1,"offset":593},"end":{"line":14,"column":87,"offset":679}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Similarly we can return a fake error object to test that our directive acts correctly if geolocation\nis not available.","position":{"start":{"line":16,"column":1,"offset":681},"end":{"line":17,"column":18,"offset":800}}}],"position":{"start":{"line":16,"column":1,"offset":681},"end":{"line":17,"column":18,"offset":800}}},{"type":"text","value":"\n"},{"type":"raw","value":"<script src=\"https://gist.github.com/NicholasMurray/78f1c7be22715622f4ff.js\"></script>","position":{"start":{"line":19,"column":1,"offset":802},"end":{"line":19,"column":87,"offset":888}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":21,"column":1,"offset":890}}}}