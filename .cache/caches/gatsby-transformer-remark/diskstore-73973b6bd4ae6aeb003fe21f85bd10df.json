{"expireTime":9007200801288851000,"key":"transformer-remark-markdown-html-ast-3d0a2fe145c93db2d4883a1a466914ae-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-external-linksgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/images/stringballs.jpg","alt":"alt text ","title":"es6 String Template Literals"},"children":[],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":69,"offset":69}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":69,"offset":69}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Template Literals","position":{"start":{"line":4,"column":3,"offset":73},"end":{"line":4,"column":20,"offset":90}}}],"position":{"start":{"line":4,"column":1,"offset":71},"end":{"line":4,"column":21,"offset":91}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ES6 has introduced Template Literals as a new way of working with strings and string\ntemplates. Template Literals have ensured that working with strings will no longer be\nas painful as it once was.","position":{"start":{"line":6,"column":1,"offset":93},"end":{"line":8,"column":27,"offset":292}}}],"position":{"start":{"line":6,"column":1,"offset":93},"end":{"line":8,"column":27,"offset":292}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The main benefits are:","position":{"start":{"line":10,"column":1,"offset":294},"end":{"line":10,"column":23,"offset":316}}}],"position":{"start":{"line":10,"column":1,"offset":294},"end":{"line":10,"column":23,"offset":316}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Back ticks - no more escaping","position":{"start":{"line":12,"column":3,"offset":320},"end":{"line":12,"column":32,"offset":349}}}],"position":{"start":{"line":12,"column":1,"offset":318},"end":{"line":12,"column":32,"offset":349}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Multi-line - now less characters ","position":{"start":{"line":13,"column":3,"offset":352},"end":{"line":13,"column":36,"offset":385}}}],"position":{"start":{"line":13,"column":1,"offset":350},"end":{"line":13,"column":36,"offset":385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Interpolation - not only variables but any expressions","position":{"start":{"line":14,"column":3,"offset":388},"end":{"line":14,"column":57,"offset":442}}}],"position":{"start":{"line":14,"column":1,"offset":386},"end":{"line":14,"column":57,"offset":442}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":318},"end":{"line":14,"column":57,"offset":442}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"No more escaping","position":{"start":{"line":17,"column":4,"offset":448},"end":{"line":17,"column":20,"offset":464}}}],"position":{"start":{"line":17,"column":1,"offset":445},"end":{"line":17,"column":20,"offset":464}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The clever use of the ` back tick character to enclose text means that the common problem\nof escaping your double quotes or single quotes is not longer an issue.","position":{"start":{"line":19,"column":1,"offset":466},"end":{"line":20,"column":72,"offset":628}}}],"position":{"start":{"line":19,"column":1,"offset":466},"end":{"line":20,"column":72,"offset":628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Before whether you used single or double quotes to wrap text you eventually end up\nescaping quotes within the text.","position":{"start":{"line":22,"column":1,"offset":630},"end":{"line":23,"column":33,"offset":746}}}],"position":{"start":{"line":22,"column":1,"offset":630},"end":{"line":23,"column":33,"offset":746}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var lyric = &#39;I\\&#39;m a lumberjack and I\\&#39;m ok&#39;;\n\nvar button = &quot;&lt;button class=\\&quot;btn btn-primary\\&quot;&gt;Save&lt;/button&gt;&quot;;</code></pre></div>","position":{"start":{"line":25,"column":1,"offset":748},"end":{"line":31,"column":4,"offset":867}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now the back ticks negate the escaping problem.","position":{"start":{"line":33,"column":1,"offset":869},"end":{"line":33,"column":48,"offset":916}}}],"position":{"start":{"line":33,"column":1,"offset":869},"end":{"line":33,"column":48,"offset":916}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var Q = `&#39;Have you any idea&#39;, he said, &#39;what &quot;dillygrout&quot; is?&#39;`;</code></pre></div>","position":{"start":{"line":35,"column":1,"offset":918},"end":{"line":39,"column":4,"offset":992}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Multi-line formating","position":{"start":{"line":42,"column":4,"offset":998},"end":{"line":42,"column":24,"offset":1018}}}],"position":{"start":{"line":42,"column":1,"offset":995},"end":{"line":42,"column":24,"offset":1018}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are traditionally two ways to format strings over multiple lines, without using a\nfunction, which involved either string concatenation or the lesser known method of adding\na backslash to the end of a line.","position":{"start":{"line":44,"column":1,"offset":1020},"end":{"line":46,"column":34,"offset":1233}}}],"position":{"start":{"line":44,"column":1,"offset":1020},"end":{"line":46,"column":34,"offset":1233}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var exampleHTML = &quot;&lt;body&gt;\\n&quot; +\n&quot;  &lt;h1&gt;Header Text&lt;/h1&gt;\\n&quot; +\n&quot;  &lt;p&gt;Paragraph Text&lt;/p&gt;\\n&quot; +\n&quot;&lt;/body&gt;&quot;;\n\nvar exampleHTML2 = &quot;&lt;body&gt;\\n\\\n  &lt;h1&gt;Header Text&lt;/h1&gt;\\n\\\n  &lt;p&gt;Paragraph Text&lt;/p&gt;\\n\\\n&lt;/body&gt;&quot;;</code></pre></div>","position":{"start":{"line":49,"column":1,"offset":1236},"end":{"line":61,"column":4,"offset":1440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Which can be now resolved by the neater wrapping text with back ticks.","position":{"start":{"line":63,"column":1,"offset":1442},"end":{"line":63,"column":71,"offset":1512}}}],"position":{"start":{"line":63,"column":1,"offset":1442},"end":{"line":63,"column":71,"offset":1512}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var exampleHTML3 = `&lt;body&gt;\n  &lt;h1&gt;Header Text&lt;/h1&gt;\n  &lt;p&gt;Paragraph Text&lt;/p&gt;\n&lt;/body&gt;`;</code></pre></div>","position":{"start":{"line":65,"column":1,"offset":1514},"end":{"line":72,"column":4,"offset":1607}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Interpolation","position":{"start":{"line":75,"column":4,"offset":1613},"end":{"line":75,"column":17,"offset":1626}}}],"position":{"start":{"line":75,"column":1,"offset":1610},"end":{"line":75,"column":17,"offset":1626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ES6 facilitates interpolation by using the ${expession} notation to replace the syntax of\na variable preceded and/or succeeded by a plus sign.","position":{"start":{"line":77,"column":1,"offset":1628},"end":{"line":78,"column":53,"offset":1771}}}],"position":{"start":{"line":77,"column":1,"offset":1628},"end":{"line":78,"column":53,"offset":1771}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Plus syntax.","position":{"start":{"line":80,"column":1,"offset":1773},"end":{"line":80,"column":13,"offset":1785}}}],"position":{"start":{"line":80,"column":1,"offset":1773},"end":{"line":80,"column":13,"offset":1785}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var a = 4;\nalert(a + &#39; cubed is &#39; + (a * a * a));</code></pre></div>","position":{"start":{"line":82,"column":1,"offset":1787},"end":{"line":87,"column":4,"offset":1846}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The more readable new ${expession} syntax.","position":{"start":{"line":89,"column":1,"offset":1848},"end":{"line":89,"column":43,"offset":1890}}}],"position":{"start":{"line":89,"column":1,"offset":1848},"end":{"line":89,"column":43,"offset":1890}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var a = 4;\nalert(`${a} cubed is ${a * a * a}`);</code></pre></div>","position":{"start":{"line":91,"column":1,"offset":1892},"end":{"line":96,"column":4,"offset":1949}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":97,"column":1,"offset":1950}}}}