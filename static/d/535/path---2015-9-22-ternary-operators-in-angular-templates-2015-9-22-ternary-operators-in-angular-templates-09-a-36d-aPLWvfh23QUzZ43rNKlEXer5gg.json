{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"80e30a68-bf7c-5c3e-b948-24c78b46bbe6","excerpt":"Ternary Operators in Angular Templates Ternary Operators are part of the toolset of most programming languages and are available of course in Javascript. The syntax for a ternary operator is {% highlight html %}\ncondition ? expr1 : expr2\n{% endhighlight %} Where the  condition  is any statement that evaluates to true or false and expressions  expr1  and  expr2  are values of any type. If the  condition  is true then value of  expr1  is returned otherwise the value of  expr2  is returned. So in the following code {% highlight html %}\nvar currentMember = {\n  name: ‘Joe Bloggs’,\n  isGoldMember: true\n};\nconsole.log(“Price: ” + (currentMember.isGoldMember ? “£5.00” : “£10.00”));\n{% endhighlight %} The output is {% highlight html %}\nPrice: £5.00\n{% endhighlight %} How to use ternary operators in angular templates The most useful use case I have found for ternary operators is within angular directives such as ng-class and ng-style. Ternary operators were added to Angular  1.1.5  and can be used from version 1.1.5 and up. Using a ternary operator within ng-style In the example we wish to apply to highlight every third item in a list. The list to display contains the first names of users of a website. So we will initialise our angular app in the usual way {% highlight html %}\nvar app = angular.module(‘ternaryExample’, []);\n{% endhighlight %} And the main controller contains a list of first names {% highlight html %}\napp.controller(‘MainCtrl’, function($scope) {\n  $scope.persons =  \n    ‘Allison’,\n    ‘Arthur’,\n    ‘Ana’,\n    ‘Alex’,\n    ‘Arlene’,\n    ‘Alberto’,\n    ‘Barry’,\n    ‘Bertha’,\n    ‘Bill’,\n    ‘Bonnie’,\n    ‘Bret’,\n    ‘Beryl’,\n    ‘Chantal’,\n    ‘Cristobal’,\n    ‘Claudette’,\n    ‘…\n     ;\n});\n{% endhighlight %} To simply display the user names with a greeting we use a template within our controller attached to the document body. {% highlight html %} By adding track by $index we can use the current array index in our code. {% highlight html %}\nperson in persons track by $index\n{% endhighlight %} So how is this useful in a ternary operator where we want to apply a different style to every third person? We can add one to $index, as it is a 0 based index, and then return either a green hex code value as the color if true {% highlight html %}\n‘#008141’\n{% endhighlight %} or a black hex code value if false {% highlight html %}\n‘#131313’\n{% endhighlight %} based on a ternary expression that utilizes a modulus operator to evaluate if the current $index mod…","html":"<p><img src=\"http://i.imgur.com/zwRgfKG.jpg,\" alt=\"alt text \" title=\"There are 10 types of people in this world: those who understand ternary, those who don&#x27;t, and those who thought this was a binary joke\"></p>\n<h1>Ternary Operators in Angular Templates</h1>\n<p>Ternary Operators are part of the toolset of most programming languages and are available of course in Javascript.</p>\n<p>The syntax for a ternary operator is</p>\n<p>{% highlight html %}\ncondition ? expr1 : expr2\n{% endhighlight %}</p>\n<p>Where the <em>condition</em> is any statement that evaluates to true or false and expressions <em>expr1</em> and <em>expr2</em> are values of any type.</p>\n<p>If the <em>condition</em> is true then value of <em>expr1</em> is returned otherwise the value of <em>expr2</em> is returned.</p>\n<p>So in the following code</p>\n<p>{% highlight html %}\nvar currentMember = {\nname: ‘Joe Bloggs’,\nisGoldMember: true\n};\nconsole.log(“Price: ” + (currentMember.isGoldMember ? “£5.00” : “£10.00”));\n{% endhighlight %}</p>\n<p>The output is</p>\n<p>{% highlight html %}\nPrice: £5.00\n{% endhighlight %}</p>\n<h2>How to use ternary operators in angular templates</h2>\n<p>The most useful use case I have found for ternary operators is within angular directives such as ng-class and ng-style.</p>\n<p>Ternary operators were added to Angular <a href=\"https://github.com/angular/angular.js/commit/6798fec4390a72b7943a49505f8a245b6016c84b\">1.1.5</a> and can be used from version 1.1.5 and up.</p>\n<h3>Using a ternary operator within ng-style</h3>\n<p>In the example we wish to apply to highlight every third item in a list.</p>\n<p>The list to display contains the first names of users of a website.</p>\n<p>So we will initialise our angular app in the usual way</p>\n<p>{% highlight html %}\nvar app = angular.module(‘ternaryExample’, []);\n{% endhighlight %}</p>\n<p>And the main controller contains a list of first names</p>\n<p>{% highlight html %}\napp.controller(‘MainCtrl’, function($scope) {\n$scope.persons = [\n‘Allison’,\n‘Arthur’,\n‘Ana’,\n‘Alex’,\n‘Arlene’,\n‘Alberto’,\n‘Barry’,\n‘Bertha’,\n‘Bill’,\n‘Bonnie’,\n‘Bret’,\n‘Beryl’,\n‘Chantal’,\n‘Cristobal’,\n‘Claudette’,\n‘…\n];\n});\n{% endhighlight %}</p>\n<p>To simply display the user names with a greeting we use a template within our controller attached to the document body.</p>\n<p>{% highlight html %}</p>\n <body ng-controller=\"MainCtrl\">\n    <div ng-repeat=\"person in persons\">\n      <h4>\n      {% raw %}\n        Hello {{ person }}!\n      {% endraw %}\n      </h4>\n    </div>\n  </body>\n{% endhighlight %}\n<p>By adding track by $index we can use the current array index in our code.</p>\n<p>{% highlight html %}\nperson in persons track by $index\n{% endhighlight %}</p>\n<p>So how is this useful in a ternary operator where we want to apply a different style to every third person?</p>\n<p>We can add one to $index, as it is a 0 based index, and then return either a green hex code value as the color if true</p>\n<p>{% highlight html %}\n‘#008141’\n{% endhighlight %}</p>\n<p>or a black hex code value if false</p>\n<p>{% highlight html %}\n‘#131313’\n{% endhighlight %}</p>\n<p>based on a ternary expression that utilizes a modulus operator to evaluate if the current $index mod 3 returns 0 and is indeed a ‘third’ element in the array. </p>\n<p>{% highlight html %}</p>\n<h4 ng-style=\"{color : ($index + 1) % 3 == 0 ? '#008141' : '#131313'}\">\n{% endhighlight %}\n<p>Like so</p>\n<p>{% highlight html %}</p>\n <body ng-controller=\"MainCtrl\">\n    <div ng-repeat=\"person in persons track by $index\">\n      <h4 ng-style=\"{color : ($index + 1) % 3 == 0 ? '#008141' : '#131313'}\">\n        {% raw %}\n        Hello {{ person }}!\n        {% endraw %}\n      </h4>\n    </div>\n  </body>\n{% endhighlight %}\n<p>A working demo of our example can be found on <a href=\"http://codepen.io/NicholasMurray/pen/MajgQZ\">codepen</a>.</p>\n<h3>Credits</h3>\n<p>The ternary joke used in the meme I found <a href=\"https://www.allegro.cc/forums/thread/611052/2\">here</a></p>","frontmatter":{"title":"Ternary Operators in Angular Templates","date":null}}},"pageContext":{"slug":"/2015-9-22-ternary-operators-in-angular-templates/2015-9-22-ternary-operators-in-angular-templates/","previous":{"fields":{"slug":"/2015-10-2-debugging-angularjs-$scope-in-a-browser-console/2015-10-2-debugging-angularjs-$scope-in-a-browser-console/"},"frontmatter":{"title":"How to debug AngularJS $scope in a browser console"}},"next":{"fields":{"slug":"/2015-8-4-debugging-phantomjs-tests-in-a-browser/2015-8-4-debugging-phantomjs-tests-in-a-browser/"},"frontmatter":{"title":"How to debug phantomjs tests in another browser"}}}}