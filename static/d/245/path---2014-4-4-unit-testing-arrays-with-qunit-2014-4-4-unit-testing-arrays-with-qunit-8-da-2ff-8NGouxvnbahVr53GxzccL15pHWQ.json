{"data":{"site":{"siteMetadata":{"title":"It's My Code Blog","author":"Nicholas Murray"}},"markdownRemark":{"id":"bc925dad-bd1f-5048-8e5a-7f19934fd382","fields":{"slug":"/2014-4-4-unit-testing-arrays-with-qunit/2014-4-4-unit-testing-arrays-with-qunit/"},"excerpt":"How to test Array equality When testing arrays with QUnit you may wish to assert that one array is equal to another array. Qunit provides the equal( actual…","html":"<p><img src=\"/images/comparingpears.png\" alt=\"alt text \" title=\"Are these pears the same as these pears\"></p>\n<h1>How to test Array equality</h1>\n<p>When testing arrays with QUnit you may wish to assert that one array is equal to another array.</p>\n<p>Qunit provides the equal( actual, expected, message ) method for asserting that actual value is equal to the expected value.</p>\n<p>so what happens in the following test scenario</p>\n<div>\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 75%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\"\n          >\n            <iframe style=\"\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \" src=\"http://www.unittest.it/embed/QxQx1Bj/1/unittestcode/\"></iframe>\n          </div>\n          </div>\n<p>this…</p>\n<div>\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 75%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\"\n          >\n            <iframe style=\"\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \" src=\"http://www.unittest.it/embed/QxQx1Bj/1/unittestresult/\"></iframe>\n          </div>\n          </div>\n<p>It fails horribly onscreen with an error from the sourceStackTrace() output from within QUnit.push</p>\n<p>So how can we test arrays with QUnit?</p>\n<p>We can use the deepEqual() assert method. </p>\n<p>Qunit provides the deepEqual( actual, expected, message ) method for a deep recursive comparison, working on primitive types, arrays, objects, regular expressions, dates and functions.</p>\n<p>So let’s test with deepEqual instead</p>\n<div>\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 75%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\"\n          >\n            <iframe style=\"\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \" src=\"http://www.unittest.it/embed/75hM6Wq/1/unittestcode/\"></iframe>\n          </div>\n          </div>\n<p>It passes</p>\n<div>\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 87.5%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\"\n          >\n            <iframe style=\"\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \" src=\"http://www.unittest.it/embed/75hM6Wq/1/unittestresult/\"></iframe>\n          </div>\n          </div>\n<p>due to the implementation of the deepEqual() method there is a call innerEquiv which recursively compares each item within the array</p>","frontmatter":{"title":"Unit Testing arrays with QUnit","date":"April 04, 2014"}}},"pageContext":{"slug":"/2014-4-4-unit-testing-arrays-with-qunit/2014-4-4-unit-testing-arrays-with-qunit/","previous":{"fields":{"slug":"/2014-3-3-so-you-want-a-simple-httpserver/2014-3-3-so-you-want-a-simple-httpserver/"},"frontmatter":{"title":"So you want a simple HTTPServer?"}},"next":{"fields":{"slug":"/2015-2-7-psst-wanna-monkey-patch/2015-2-7-psst-wanna-monkey-patch/"},"frontmatter":{"title":"Psst! Wanna Monkey Patch?"}}}}