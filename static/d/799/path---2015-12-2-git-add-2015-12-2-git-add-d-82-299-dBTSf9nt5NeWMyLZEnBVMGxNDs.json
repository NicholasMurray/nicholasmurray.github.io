{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"f4752639-d5a8-56bf-8010-596d920af8fd","excerpt":"Simple git workflow When working on my personal projects I have always followed a simple git workflow that involves nothing more \ncomplicated than creating a new branch adding and comitting my changes into the new branch, then merging the \nnew branch into master and pushing it to  bitbucket  or \n github . {% highlight html %}\ngit branch “NewBranch”\n…make changes…\ngit add -A\ngit commit -m “Added changes”\ngit checkout master\ngit merge NewBranch\ngit push…","html":"<p><img src=\"%7B%7B%20site.baseurl%20%7D%7D/images/git.png\" alt=\"alt text \" title=\"Git\"></p>\n<h2>Simple git workflow</h2>\n<p>When working on my personal projects I have always followed a simple git workflow that involves nothing more\ncomplicated than creating a new branch adding and comitting my changes into the new branch, then merging the\nnew branch into master and pushing it to <a href=\"https://bitbucket.org/\" target=\"_blank\">bitbucket</a> or\n<a href=\"https://github.com/\" target=\"_blank\">github</a>.</p>\n<p>{% highlight html %}\ngit branch “NewBranch”\n…make changes…\ngit add -A\ngit commit -m “Added changes”\ngit checkout master\ngit merge NewBranch\ngit push\n{% endhighlight %}</p>\n<h2>What does git add -A actually do?</h2>\n<h3>Git Version 1.x</h3>\n<p>In git version <strong>1.x</strong> <code class=\"language-text\">git add -A</code> is a shorthand way of typing the <code class=\"language-text\">git add --all</code> command that stages (adds) all new, modified and deleted files.\nThis is in itself a shorthand way of typing the commands</p>\n<p>{% highlight html %}\ngit add .\ngit add -u\n{% endhighlight %}</p>\n<p>where <code class=\"language-text\">git add .</code> stages new and modified files only  and <code class=\"language-text\">git add -u</code> stages modified and deleted files only.</p>\n<p>{% highlight html %}</p>\n<h1>For the next commit</h1>\n<p>$ git add .   # stage only files new or modified files\n$ git add -u  # stage only files modified or deleted files\n$ git add -A  # stage files new, modified or deleted files\n{% endhighlight %}</p>\n<h3>Git Version 2.x</h3>\n<p>In git version <strong>2.x</strong> the <code class=\"language-text\">git add</code> commands have changed so that <code class=\"language-text\">git add .</code> is now equivalent to <code class=\"language-text\">git add -A</code> </p>\n<p>{% highlight html %}</p>\n<h1>For the next commit</h1>\n<p>$ git add .   # stage files new, modified or deleted files\n$ git add -u  # stage only files modified or deleted  files\n$ git add —ignore removal  # stage only new or modified files\n$ git add -A  # stage files new, modified or deleted\n{% endhighlight %}</p>\n<p>So, when I upgrade from git <strong>1.x</strong> to <strong>2.x</strong> I will be able to save typing one character by using <code class=\"language-text\">git add .</code> instead.</p>","frontmatter":{"title":"What exactly does git add -A do?","date":null}}},"pageContext":{"slug":"/2015-12-2-git-add/2015-12-2-git-add/","previous":{"fields":{"slug":"/2016-01-6-creating-an-angularjs-pulse-directive/2016-01-6-creating-an-angularjs-pulse-directive/"},"frontmatter":{"title":"Creating an AngularJS pulse directive"}},"next":{"fields":{"slug":"/2015-11-11-angularjs-execute-a-custom-directive-link-function-after-ngBind-or-interpolation/2015-11-11-angularjs-execute-a-custom-directive-link-function-after-ngBind-or-interpolation/"},"frontmatter":{"title":"AngularJS how to execute a custom directive link or compile function after ngBind or interpolation"}}}}