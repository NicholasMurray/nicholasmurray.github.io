{"data":{"site":{"siteMetadata":{"title":"It's My Code Blog","author":"Nicholas Murray"}},"markdownRemark":{"id":"85aa60c0-7061-50f3-bd33-c9246474d8e3","fields":{"slug":"/2019-1-13-big-o-notation-with-javascript/2019-1-13-big-o-notation-with-javascript/"},"excerpt":"In the beginning there was var And  var  was a little bit tricky to understand. So, along came es6 with the new \nshiny  let . Block level scoping In javascriptâ€¦","html":"<p><img src=\"/images/let-there-be-light.jpg\" alt=\"alt text \" title=\"ES6 Let there be let\"></p>\n<p><img src=\"/images/let-there-be-light.jpg\" alt=\"alt text \" title=\"ES6 Let there be let\"></p>\n<h1>In the beginning there was var</h1>\n<p>And <strong><em>var</em></strong> was a little bit tricky to understand. So, along came es6 with the new\nshiny <strong><em>let</em></strong>.</p>\n<h2>Block level scoping</h2>\n<p>In javascript the setting of a variable can be the cause of bugs due to way javascript allows\nthe assigning of values. For example, in the code below you would think that declaring and\nassigning a value to a variable inside a block of code would isolate it from the rest of the\ncode. But javascript does not have block level scoping. So, in the code below the variable\n<strong><em>messageInBottle</em></strong> takes its value from the second assignment and not the first.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var messageInBottle = &#39;Help me!&#39;;\n{\n  var messageInBottle = &#39;Would you like a pen pal?&#39;; \n}\nconsole.log(messageInBottle);\n\n// output: Would you like a pen pal?</code></pre></div>","frontmatter":{"title":"Big O notation with Javascript","date":"August 04, 2019"}}},"pageContext":{"slug":"/2019-1-13-big-o-notation-with-javascript/2019-1-13-big-o-notation-with-javascript/","previous":{"fields":{"slug":"/2017-3-18-react-random-squares-avatar/2017-3-18-react-random-squares-avatar/"},"frontmatter":{"title":"React Random Squares Avatar"}},"next":null}}