{"data":{"site":{"siteMetadata":{"title":"It's My Code Blog","author":"Nicholas Murray"}},"markdownRemark":{"id":"85aa60c0-7061-50f3-bd33-c9246474d8e3","fields":{"slug":"/2019-1-13-big-o-notation-with-javascript/2019-1-13-big-o-notation-with-javascript/"},"excerpt":"\nPhoto by Jeff Fielitz on Unsplash Big O notation with Javascript Big O notation What is Big O notation What is an algorithm O (1) An algorithm that has a…","html":"<p><img src=\"/images/jeff-fielitz-120506-unsplash.jpg\" alt=\"alt text \" title=\"Big O notation with Javascript\">\nPhoto by Jeff Fielitz on Unsplash</p>\n<h1>Big O notation with Javascript</h1>\n<h2>Big O notation</h2>\n<h3>What is Big O notation</h3>\n<h3>What is an algorithm</h3>\n<h2>O (1)</h2>\n<p>An algorithm that has a constant run time regardless of the supplied dataset <code class=\"language-text\">n</code></p>\n<p>So for example, an algorithm that takes the same amount of time to complete no matter what the\ninput supplied would be finding an array item by its index.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function findByIndex(arr, index) {\n  return arr[index];\n}\n\nvar food = [&#39;🍿&#39;, &#39;🍔&#39;, &#39;🍩&#39;, &#39;🍗&#39;];\nvar drinks = [&#39;☕️&#39;, &#39;🍺&#39;, &#39;🍹&#39;, &#39;🍷&#39;, &#39;🍸&#39;, &#39;🍵&#39;, &#39;🍶&#39;];\n\nconsole.log(findByIndex(food, 2));\nconsole.log(findByIndex(drinks, 6));</code></pre></div>\n<h3>O (1) Chart</h3>\n<svg width=\"800\" height=\"800\">\n    <g>\n      <rect x=\"0\" y=\"0\" width=\"800\" height=\"800\" fill=\"yellow\"></rect>\n      <path d=\"M50 0 L 50 750 L 800 750\" fill=\"transparent\" stroke=\"black\" stroke-width=\"2\"></path>\n      <text x=\"0\" y=\"0\" transform=\"translate(30 400) rotate(-90)\" style=\"dominant-baseline: middle; text-anchor: middle; font-size:20px; color: #555; font-size:20px; color: #555; font-style: italic;\" fill=\"black\">Time ---></text>\n      <text x=\"0\" y=\"0\" transform=\"translate(420 780)\" style=\"dominant-baseline: middle; text-anchor: middle; font-size:20px; color: #555; font-style: italic;\" fill=\"black\">Input Size ---></text>\n      <path d=\"M50 700 L 800 700\" fill=\"transparent\" stroke=\"red\" stroke-width=\"2\"></path>\n      <text x=\"70\" y=\"40\" fill=\"black\">O(log n), O(1)</text>\n    </g>\n</svg>\n<p>stuff</p>\n<p>stuff</p>\n<div>\n<svg id=\"chart\" width=\"800\" height=\"500\" xmlns=\"http://www.w3.org/2000/svg\">\n  <!-- horrible region -->\n  <path d=\"M50 450 L 50 0 L 800 0 L 800 450 Z\" fill=\"#ff8989\"></path>\n  <!-- bad region -->\n  <path d=\"M50 450 L 800 0 L 800 450 Z\" fill=\"#FFC543\"></path>\n  <!-- fair region -->\n  <path d=\"M50 450 L 800 450 L 800 330 Z\" fill=\"yellow\"></path>\n  <!-- good region -->\n  <path d=\"M50 450 L 800 450 L 800 410 Z\" fill=\"#C8EA00\"></path>\n  <!-- excellent region -->\n  <path d=\"M50 450 L 800 450 L 800 440 Z\" fill=\"#53d000\"></path>\n  <!-- axes -->\n<p>  <path d=\"M50 0 L 50 450 L 800 450\" fill=\"transparent\" stroke=\"black\" stroke-width=\"2\"></path></p>\n<p>  <path d=\"M50 448 L 800 448\" fill=\"transparent\" stroke=\"black\" stroke-width=\"2\"></path>\n<text x=\"700\" y=\"438\" fill=\"black\">O(log n), O(1)</text></p>\n<p>  <path d=\"M50 450 L 800 400\" fill=\"transparent\" stroke=\"black\" stroke-width=\"2\"></path>\n<text x=\"760\" y=\"390\" fill=\"black\">O(n)</text></p>\n<p>  <path d=\"M50 450 Q 400 350, 800 150\" fill=\"transparent\" stroke=\"black\" stroke-width=\"2\"></path>\n<text x=\"630\" y=\"190\" fill=\"black\">O(n log n)</text></p>\n<p>  <path d=\"M50 450 Q 180 380, 250 0\" fill=\"transparent\" stroke=\"black\" stroke-width=\"2\"></path>\n<text x=\"260\" y=\"30\" fill=\"black\">O(n^2)</text></p>\n<p>  <path d=\"M50 450 C 100 430, 120 350, 120 0\" fill=\"transparent\" stroke=\"black\" stroke-width=\"2\"></path>\n<text x=\"125\" y=\"20\" fill=\"black\">O(2^n)</text></p>\n<p>  <path d=\"M50 450 C 80 450, 80 350, 80 0\" fill=\"transparent\" stroke=\"black\" stroke-width=\"2\"></path>\n<text x=\"80\" y=\"20\" fill=\"black\">O(n!)</text></p>\n<p>  <text x=\"0\" y=\"0\" transform=\"translate(30 230) rotate(-90)\" style=\"dominant-baseline: middle; text-anchor: middle; font-size:20px; color: #555; font-size:20px; color: #555; font-style: italic;\" fill=\"black\">Operations</text>\n<text x=\"0\" y=\"0\" transform=\"translate(420 470)\" style=\"dominant-baseline: middle; text-anchor: middle; font-size:20px; color: #555; font-style: italic;\" fill=\"black\">Elements</text>\n</svg></p>\n</div>\n<h3></h3>","frontmatter":{"title":"Big O notation with Javascript","date":"January 13, 2019"}}},"pageContext":{"slug":"/2019-1-13-big-o-notation-with-javascript/2019-1-13-big-o-notation-with-javascript/","previous":{"fields":{"slug":"/2017-3-18-react-random-squares-avatar/2017-3-18-react-random-squares-avatar/"},"frontmatter":{"title":"React Random Squares Avatar"}},"next":null}}