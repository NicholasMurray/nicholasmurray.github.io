{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019-12-13-a-javascript-const-is-not-immutable/2019-12-13-a-const-is-not-immutable/","result":{"data":{"site":{"siteMetadata":{"title":"Its my Code Blog"}},"markdownRemark":{"id":"315eadb3-6030-596c-af7c-23c17b6a43f5","excerpt":"// https://ponyfoo.com/articles/const-variables-not-immutable A Javascript Const is not immutable  A Javascript Const is a variable that cannot be reassigned In…","html":"<p>// <a href=\"https://ponyfoo.com/articles/const-variables-not-immutable\">https://ponyfoo.com/articles/const-variables-not-immutable</a></p>\n<h1>A Javascript Const is not immutable</h1>\n<p><em><code class=\"language-text\">immutable - unchanging over time or unable to be changed</code></em></p>\n<h2>A Javascript Const is a variable that cannot be reassigned</h2>\n<p>In the following example we declare a javascript constant variable DOG and assign it the value ’🐕‘. When we try to\nreassign its value to ’🐩’ it creates an error <code class=\"language-text\">Assignment to constant variable</code>. This is because we are\ntrying to change its read-only reference to a value or in other words <em>reassigning its value</em>. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const DOG = &#39;🐕&#39;;\nconsole.log(DOG);\n🐕\n\nDOG = &#39;🐩&#39;;\n❌ Uncaught TypeError: Assignment to constant variable.</code></pre></div>\n<h2>Are Javascript Consts then immutable?</h2>\n<p>The previous example would lead us to believe that constants are in fact immutable</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// Re-assignment of constants properties\nconst PET_DOG = {\n    name: &#39;Rover&#39;,\n    breed: &#39;🐕&#39;\n  };\n\npetDog.breed = &#39;🐩&#39;;\nconsole.log(petDog.breed);\n// 🐩</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const dogs = [&#39;🐕&#39;, &#39;🐩&#39;];\ndogs.push(&#39;🐺&#39;);\nconsole.log(dogs);\n// (3) [&quot;🐕&quot;, &quot;🐩&quot;, &quot;🐺&quot;]</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// error TS2339: Property &#39;push&#39; does not exist on type &#39;ReadonlyArray&lt;string&gt;&#39;.\n// VM708:2 Uncaught TypeError: Cannot add property 3, object is not extensible at Array.push \nconst frozen = Object.freeze([&#39;🍨&#39;, &#39;⛸️&#39;, &#39;☃️&#39;]);\nfrozen.push(&#39;❄️&#39;);</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const sandwich = {\n    ingredients: [&#39;🍞&#39;, &#39;🥚&#39;, &#39;🥗&#39;, &#39;🍅&#39;]\n  };\nsandwich.ingredients.push(&#39;🧀&#39;);\nconsole.log(sandwich);\n// {ingredients: Array(5)}\n// ingredients: (5) [&quot;🍞&quot;, &quot;🥚&quot;, &quot;🥗&quot;, &quot;🍅&quot;, &quot;🧀&quot;]</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// This still works as the array contents can be mutated as Object.freeze is shallow \nconst frozenYougart = Object.freeze({\n    ingredients: [&#39;🥛&#39;, &#39;🍦&#39;]\n  });\nfrozenYougart.ingredients.push(&#39;🍓&#39;);\nconsole.log(frozenYougart);\n// {ingredients: Array(3)}\n// ingredients: (3) [&quot;🥛&quot;, &quot;🍦&quot;, &quot;🍓&quot;]</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// This does not work as the array contents can&#39;t be mutated as Object.freeze is applied to inner objects\n// VM981:4 Uncaught TypeError: Cannot add property 2, object is not extensible\n//    at Array.push (&lt;anonymous&gt;)\nconst deepFrozenYougart = Object.freeze({\n    ingredients: Object.freeze([&#39;🥛&#39;, &#39;🍦&#39;])\n  });\ndeepFrozenYougart.ingredients.push(&#39;🍒&#39;);\nconsole.log(deepFrozenYougart.ingredients);\n// {ingredients: Array(2)}\n// ingredients (2) [&quot;🥛&quot;, &quot;🍦&quot;]</code></pre></div>","frontmatter":{"title":"A Javascript Const is not immutable","date":"December 13, 2019","description":"A Const is not immutable"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2019-12-13-a-javascript-const-is-not-immutable/2019-12-13-a-const-is-not-immutable/","previous":{"fields":{"slug":"/2019-1-13-big-o-notation-with-javascript/2019-1-13-big-o-notation-with-javascript/"},"frontmatter":{"title":"Big-O notation with Javascript"}},"next":null}}}