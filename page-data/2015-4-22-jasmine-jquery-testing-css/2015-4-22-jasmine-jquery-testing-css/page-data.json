{"componentChunkName":"component---src-templates-blog-post-js","path":"/2015-4-22-jasmine-jquery-testing-css/2015-4-22-jasmine-jquery-testing-css/","result":{"data":{"site":{"siteMetadata":{"title":"Its my Code Blog"}},"markdownRemark":{"id":"30dfc776-3a3f-5129-b56b-6bff503999a8","excerpt":"alt text  If you would like to test your CSS classes with Jasmine you can use Jasmine Jquery. jasmine-jquery provides two extensions for the Jasmine JavaScriptâ€¦","html":"<p><img src=\"https://i.imgur.com/NmVNJdW.jpg,\" alt=\"alt text \" title=\"Now test your CSS classess\"></p>\n<h1>If you would like to test your CSS classes with Jasmine you can use Jasmine Jquery.</h1>\n<p>jasmine-jquery provides two extensions for the <a href=\"http://jasmine.github.io/\">Jasmine</a> JavaScript Testing Framework:</p>\n<ul>\n<li>a set of custom matchers for jQuery framework</li>\n<li>an API for handling HTML, CSS, and JSON fixtures in your specs</li>\n</ul>\n<p>Using the loadStyleFixtures or setStyleFixtures global shortcuts we can add the css we want to test either from a relative url</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  loadStyleFixtures(&#39;css/stylesheet.css&#39;);</code></pre></div>\n<p>or append the classes directly to the document head</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  setStyleFixtures(&#39;.btn-success { color: #fff; background-color: #5cb85c; border-color: #4cae4c; }&#39;);</code></pre></div>\n<p>Then load the fixtures using the loadFixtures or setFixtures global shortcuts either from a relative url</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  loadFixtures(&#39;templates/success.html&#39;);</code></pre></div>\n<p>or append the fixture directly to the document body</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  fixture = setFixtures(&#39;&lt;button type=&quot;button&quot; class=&quot;btn btn-success&quot;&gt;Success&lt;/button&gt;&#39;);</code></pre></div>\n<p>Then use the custom matchers to retrieve the element you would like to test against</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  var successButton = fixture.find(&#39;.btn-success&#39;);</code></pre></div>\n<p>and then test against your expectation</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  expect(successButton.css(&#39;color&#39;)).toEqual(&#39;rgb(255, 255, 255)&#39;);</code></pre></div>\n<p>You can see the test below working in this  <a href=\"https://jsfiddle.net/Nicholas_Murray/2488cm7k/\">jsfiddle</a></p>\n<script src=\"https://gist.github.com/NicholasMurray/ca68a50a7c6a3954d74a.js\"></script>\n<p>with all tests passing</p>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 75%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <iframe style=\"width: 100%; height: 240px; position: absolute; top: 0; left: 0; width: 100%; height: 100%; \" src=\"https://jsfiddle.net/Nicholas_Murray/2488cm7k/embedded/result/\"></iframe> </div>","frontmatter":{"title":"Testing CSS classes with Jasmine-JQuery","date":"April 03, 2015","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2015-4-22-jasmine-jquery-testing-css/2015-4-22-jasmine-jquery-testing-css/","previous":{"fields":{"slug":"/2015-3-23-directives-all-the-way-down/2015-3-23-directives-all-the-way-down/"},"frontmatter":{"title":"AngularJS - its turtles all the way down!"}},"next":{"fields":{"slug":"/hello-world/"},"frontmatter":{"title":"Hello World"}}}}}